{"version":3,"sources":["shared/components/UIElements/Avatar.js","shared/components/UIElements/Card.js","user/components/UserItem.js","user/components/UsersList.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","shared/hooks/http-hook.js","user/pages/Users.js","shared/util/Validators.js","shared/components/FormElements/Input.js","shared/components/FormElements/ImageUpload.js","shared/hooks/form-hook.js","shared/context/auth-context.js","places/pages/NewPlace.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","places/pages/UpdatePlace.js","user/pages/Auth.js","shared/hooks/auth-hook.js","App.js","index.js"],"names":["Avatar","props","className","style","src","image","alt","width","height","Card","children","UserItem","to","id","process","name","placeCount","UsersList","items","length","map","user","key","places","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button","href","size","inverse","danger","exact","type","disabled","ErrorModal","onClear","error","LoadingSpinner","asOverlay","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequest","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrll","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Users","loadedUsers","setLoadedUsers","users","fetchUsers","VALIDATOR_MINLENGTH","val","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","click","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","AuthContext","createContext","isLoggedIn","token","userId","login","logout","NewPlace","auth","useContext","title","description","address","inputHandler","history","useHistory","formData","FormData","append","Authorization","MainHeader","NavLinks","showLogoutModal","setShowLogoutModal","cancelLogoutHandler","footerClass","SideDrawer","ReactDom","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Map","mapRef","zoom","window","google","maps","Marker","position","PlaceItem","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","onDelete","coordinates","creatorId","PlaceList","place","creator","location","onDeletePlace","UserPlaces","useParams","loadedPlaces","setLoadedPlaces","fetchPlaces","deletedPlaceId","prevPlaces","UpdatePlace","loadedPlace","setLoadedPlace","placeId","setFormData","JSON","stringify","fetchPlace","Auth","logoutTimer","isLoginMode","setIsLoginMode","email","password","authSubmitHandler","undefined","prevMode","App","routes","setToken","setUserId","tokenExpirationDate","setTokenExpirationDate","uid","expirationDate","tokenExpiration","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","render"],"mappings":"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","file":"static/js/main.38822e8a.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Avatar.scss';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\n\nimport './Card.scss';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport \"./UserItem.scss\";\r\n\r\nfunction UserItem(props) {\r\n  return (\r\n    <li className=\"user-item\">\r\n      <Card className=\"user-item__content\">\r\n        <Link to={`/${props.id}/places`}>\r\n          <div className=\"user-item__image\">\r\n            <Avatar image={`${process.env.REACT_APP_ASSET_URL}${props.image}`} alt={props.name} />\r\n          </div>\r\n          <div className=\"user-item__info\">\r\n            <h2>{props.name}</h2>\r\n            <h3>\r\n              {props.placeCount} {props.placeCount === 1 ? \"Place\" : \"Places\"}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default UserItem;\r\n","import React from \"react\";\r\n\r\nimport \"./UsersList.scss\";\r\nimport UserItem from \"./UserItem\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\n\r\nfunction UsersList(props) {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>No users found.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"users-list\">\r\n      {props.items.map((user) => (\r\n        <UserItem\r\n          key={user.id}\r\n          id={user.id}\r\n          image={user.image}\r\n          name={user.name}\r\n          placeCount={user.places.length}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default UsersList;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Backdrop.scss';\r\n\r\nfunction Backdrop(props) {\r\n    return ReactDOM.createPortal(\r\n        <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n        document.getElementById('backdrop-hook')\r\n    );\r\n};\r\n\r\nexport default Backdrop;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport Backdrop from \"./Backdrop\";\r\nimport \"./Modal.scss\";\r\n\r\nfunction ModalOverlay(props) {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footer}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n}\r\n\r\nfunction Modal(props) {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n          <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.scss';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.scss';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport function useHttpClient() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequest = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrll = new AbortController();\r\n      activeHttpRequest.current.push(httpAbortCtrll);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrll.signal,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequest.current = activeHttpRequest.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrll\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        \r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  function clearError() {\r\n    setError(null);\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequest.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    isLoading,\r\n    error,\r\n    sendRequest,\r\n    clearError,\r\n  };\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport UsersList from \"../components/UsersList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst Users = () => {\r\n  const [loadedUsers, setLoadedUsers] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  useEffect(() => {\r\n    async function fetchUsers() {\r\n      try {\r\n        const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + \"users\");\r\n        setLoadedUsers(responseData.users);\r\n      } catch (err) {\r\n      }\r\n    }\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};","import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport \"./Input.scss\";\r\n\r\nimport { validate } from \"../../util/Validators\";\r\n\r\nfunction inputReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction Input(props) {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  function changeHandler(event) {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  }\r\n\r\n  function touchHandler(event) {\r\n    dispatch({ type: \"TOUCH\" });\r\n  }\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n        onBlur={touchHandler}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport Button from \"./Button\";\r\nimport \"./ImageUpload.scss\";\r\n\r\nfunction ImageUpload(props) {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  function pickedHandler(event) {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files || event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  }\r\n\r\n  function pickImageHandler() {\r\n    filePickerRef.current.click();\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        accept=\".jpg,.jpeg,.png\"\r\n        type=\"file\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageUpload;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nfunction formReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function useForm(initialInputs, initialFormValidity) {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      inputId: id,\r\n      value: value,\r\n      isValid: isValid,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  token: null,\r\n  userId: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH,\r\n} from \"../../shared/util/Validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nimport \"./PlaceForm.scss\";\r\n\r\nconst NewPlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, sendRequest, clearError, error } = useHttpClient();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  async function placeSubmitHandler(event) {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", formState.inputs.title.value);\r\n      formData.append(\"description\", formState.inputs.description.value);\r\n      formData.append(\"address\", formState.inputs.address.value);\r\n      formData.append(\"image\", formState.inputs.image.value);\r\n      await sendRequest(process.env.REACT_APP_BACKEND_URL + \"places\", \"POST\", formData, {\r\n        Authorization: \"Bearer \" + auth.token,\r\n      });\r\n      history.push(\"/\");\r\n    } catch (err) {}\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid Title\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid description (at least 5 characters)\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          label=\"Address\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid address\"\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload\r\n          id=\"image\"\r\n          onInput={inputHandler}\r\n          errorText=\"Please provide an image.\"\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n","import React from \"react\";\r\n\r\nimport \"./MainHeader.scss\";\r\n\r\nfunction MainHeader(props) {\r\n  return <header className=\"main-header\">{props.children}</header>;\r\n}\r\n\r\nexport default MainHeader;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport Modal from \"../UIElements/Modal\";\r\nimport Button from \"../FormElements/Button\";\r\n\r\nimport \"./NavLinks.scss\";\r\n\r\nfunction NavLinks(props) {\r\n  const [showLogoutModal, setShowLogoutModal] = useState(false);\r\n\r\n  const auth = useContext(AuthContext);\r\n\r\n  function showLogoutModalHandler() {\r\n    setShowLogoutModal(true);\r\n  }\r\n\r\n  function cancelLogoutHandler() {\r\n    setShowLogoutModal(false);\r\n  }\r\n\r\n  function confirmLogoutHandler() {\r\n    setShowLogoutModal(false);\r\n    auth.logout();\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Modal\r\n        show={showLogoutModal}\r\n        onCancel={cancelLogoutHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelLogoutHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmLogoutHandler}>\r\n              CONFIRM\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and logout of the application?\r\n        </p>\r\n      </Modal>\r\n      <ul className=\"nav-links\">\r\n        <li>\r\n          <NavLink to=\"/\" exact>\r\n            ALL USERS\r\n          </NavLink>\r\n        </li>\r\n        {auth.isLoggedIn && (\r\n          <li>\r\n            <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n          </li>\r\n        )}\r\n        {auth.isLoggedIn && (\r\n          <li>\r\n            <NavLink to=\"/places/new\">ADD PLACE</NavLink>\r\n          </li>\r\n        )}\r\n        {!auth.isLoggedIn && (\r\n          <li>\r\n            <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n          </li>\r\n        )}\r\n        {auth.isLoggedIn && (\r\n          <li>\r\n            <button onClick={showLogoutModalHandler}>LOGOUT</button>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default NavLinks;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport \"./SideDrawer.scss\";\r\n\r\nfunction SideDrawer(props) {\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames=\"slide-in-left\"\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\r\n    </CSSTransition>\r\n  );\r\n\r\n  return ReactDom.createPortal(content, document.getElementById(\"drawer-hook\"));\r\n}\r\n\r\nexport default SideDrawer;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MainHeader from \"./MainHeader\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport Backdrop from \"../UIElements/Backdrop\";\r\n\r\nimport \"./MainNavigation.scss\";\r\n\r\nfunction MainNavigation(props) {\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n  const openDrawerHandler = () => {\r\n    setDrawerIsOpen(true);\r\n  };\r\n\r\n  const closeDrawerHandler = () => {\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n        <nav className=\"main-navigation__drawer-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </SideDrawer>\r\n      <MainHeader>\r\n        <h1 className=\"main-navigation__title\">\r\n          <Link to=\"/\">La Nueva</Link>\r\n        </h1>\r\n        <button\r\n          className=\"main-navigation__menu-btn\"\r\n          onClick={openDrawerHandler}\r\n        >\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n        <nav className=\"main-navigation__header-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MainNavigation;\r\n","import React, { useRef, useEffect } from \"react\";\r\n\r\nimport \"./Map.scss\";\r\n\r\nfunction Map(props) {\r\n  const mapRef = useRef();\r\n\r\n  const { center, zoom } = props;\r\n\r\n  useEffect(() => {\r\n    const map = new window.google.maps.Map(mapRef.current, {\r\n      center: center,\r\n      zoom: zoom,\r\n    });\r\n\r\n    new window.google.maps.Marker({ position: center, map: map });\r\n  }, [center, zoom]);\r\n\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n    ></div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport \"./PlaceItem.scss\";\r\n\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport Map from \"../../shared/components/UIElements/Map\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\n\r\nfunction PlaceItem(props) {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  function openMapHandler() {\r\n    setShowMap(true);\r\n  }\r\n\r\n  function closeMapHandler() {\r\n    setShowMap(false);\r\n  }\r\n\r\n  function showDeleteWarningHandler() {\r\n    setShowConfirmModal(true);\r\n  }\r\n\r\n  function cancelDeleteHandler() {\r\n    setShowConfirmModal(false);\r\n  }\r\n\r\n  async function confirmDeleteHandler() {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}places/${props.id}`,\r\n        \"DELETE\",\r\n        null,\r\n        { Authorization: \"Bearer \" + auth.token }\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (err) {}\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <Map center={props.coordinates} zoom={16} />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place? Please note that it\r\n          can't be undoned thereafter.\r\n        </p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img\r\n              src={`${process.env.REACT_APP_ASSET_URL}${props.image}`}\r\n              alt={props.title}\r\n            />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n            {auth.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PlaceItem;\r\n","import React from \"react\";\r\n\r\nimport \"./PlaceList.scss\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport PlaceItem from \"./PlaceItem\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\n\r\nfunction PlaceList(props) {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No places found. Maybe create one?</h2>\r\n          <Button to=\"/places/new\">Share Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.items.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n          onDelete={props.onDeletePlace}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default PlaceList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport PlaceList from \"../components/PlaceList\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nfunction UserPlaces() {\r\n  const userId = useParams().userId;\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n  const { isLoading, error, clearError, sendRequest } = useHttpClient();\r\n\r\n  useEffect(() => {\r\n    async function fetchPlaces() {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}places/user/${userId}`\r\n        );\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (err) {}\r\n    }\r\n    fetchPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  function placeDeleteHandler(deletedPlaceId) {\r\n    setLoadedPlaces((prevPlaces) =>\r\n      prevPlaces.filter((place) => place.id !== deletedPlaceId)\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && (\r\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeleteHandler} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default UserPlaces;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/Validators\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nimport \"./PlaceForm.scss\";\r\n\r\nfunction UpdatePlace() {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedPlace, setLoadedPlace] = useState();\r\n  const placeId = useParams().placeId;\r\n  const history = useHistory();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    true\r\n  );\r\n\r\n  useEffect(() => {\r\n    async function fetchPlace() {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}places/${placeId}`\r\n        );\r\n        setLoadedPlace(responseData.place);\r\n        setFormData(\r\n          {\r\n            title: {\r\n              value: responseData.place.title,\r\n              isValid: true,\r\n            },\r\n            description: {\r\n              value: responseData.place.description,\r\n              isValid: true,\r\n            },\r\n          },\r\n          true\r\n        );\r\n      } catch (err) {}\r\n    }\r\n    fetchPlace();\r\n  }, [sendRequest, placeId, setFormData]);\r\n\r\n  async function placeUpdateSubmitHandler(event) {\r\n    event.preventDefault();\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}places/${placeId}`,\r\n        \"PATCH\",\r\n        JSON.stringify({\r\n          title: formState.inputs.title.value,\r\n          description: formState.inputs.description.value,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      history.push(\"/\" + auth.userId + \"/places\");\r\n    } catch (err) {}\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loadedPlace && !error) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could not find place!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {!isLoading && loadedPlace && (\r\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\r\n          <Input\r\n            id=\"title\"\r\n            element=\"input\"\r\n            type=\"text\"\r\n            label=\"title\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a valid title.\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.title}\r\n            initialValid={true}\r\n          />\r\n          <Input\r\n            id=\"description\"\r\n            element=\"textarea\"\r\n            label=\"description\"\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Please enter a valid description (min. 5 characters).\"\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.description}\r\n            initialValid={true}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            UPDATE PLACE\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default UpdatePlace;\r\n","import React, { useState, useContext } from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/Validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport \"./Auth.scss\";\r\n\r\nfunction Auth() {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  function switchModeHandler() {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode((prevMode) => !prevMode);\r\n  }\r\n\r\n  const authSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"users/login\",\r\n          \"POST\",\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"name\", formState.inputs.name.value);\r\n        formData.append(\"email\", formState.inputs.email.value);\r\n        formData.append(\"password\", formState.inputs.password.value);\r\n        formData.append(\"image\", formState.inputs.image.value);\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"users/signup\",\r\n          \"POST\",\r\n          formData\r\n        );\r\n\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <Input\r\n              element=\"input\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a name.\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMode && (\r\n            <ImageUpload\r\n              center\r\n              id=\"image\"\r\n              onInput={inputHandler}\r\n              errorText=\"Please provide an image.\"\r\n            />\r\n          )}\r\n          <Input\r\n            element=\"input\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"E-Mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email address.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            element=\"input\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Please enter a valid password (should have at least 5 characteres).\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n          SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\r\n        </Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n","import { useState, useCallback, useEffect } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nexport function useAuth() {\r\n  const [token, setToken] = useState();\r\n  const [userId, setUserId] = useState();\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpiration =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokenExpiration);\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token,\r\n        expiration: tokenExpiration.toISOString(),\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    setTokenExpirationDate(null);\r\n    localStorage.removeItem(\"userData\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime =\r\n        tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    ) {\r\n      login(\r\n        storedData.userId,\r\n        storedData.token,\r\n        new Date(storedData.expiration)\r\n      );\r\n    }\r\n  }, [login]);\r\n\r\n  return { token, login, logout, userId };\r\n}\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\nimport Users from \"./user/pages/Users\";\nimport NewPlace from \"./places/pages/NewPlace\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport UserPlaces from \"./places/pages/UserPlaces\";\nimport UpdatePlace from \"./places/pages/UpdatePlace\";\nimport Auth from \"./user/pages/Auth\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\" exact>\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        login: login,\n        logout: logout,\n        userId: userId,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>{routes}</main>\n        \n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}